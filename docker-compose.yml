volumes:
  ckan_storage:
  pg_data:
  solr_data:
  pip_cache:
  site_packages:

services:    
  ckan:
    build:
      context: ckan/
      dockerfile: Dockerfile
      args:
        - TZ=${TZ}
    networks:
      - ckannet
      - dbnet
      - solrnet
      - redisnet
    env_file:
      - .env.config
      - .env.secrets
    depends_on:
      db:
        condition: service_healthy
      solr:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ckan_storage:/var/lib/ckan
      - pip_cache:/root/.cache/pip
      - site_packages:/usr/lib/python3.10/site-packages
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:5000/api/action/status_show"]
      interval: 60s
      timeout: 10s
      retries: 3
    
  datapusher:
    networks:
      - ckannet
      - dbnet
    image: ckan/ckan-base-datapusher:${DATAPUSHER_VERSION}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8800"]
      interval: 60s
      timeout: 10s
      retries: 3

  db:
    build:
      context: postgresql/
    networks:
      - dbnet
    env_file:
      - .env.config
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
     
  solr:
    networks:
      - solrnet
    build:
      context: solr/
      dockerfile: Dockerfile
      args:
        - SOLR_IMAGE_VERSION=${SOLR_IMAGE_VERSION}
    volumes:
      - solr_data:/var/solr
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-qO", "/dev/null", "http://localhost:8983/solr/"]

  redis:
    image: redis:${REDIS_VERSION}
    networks:
      - redisnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-e", "QUIT"]
    
networks:
  webnet:
  ckannet:
  solrnet:
    internal: true
  dbnet:
    internal: true
  redisnet:
    internal: true
